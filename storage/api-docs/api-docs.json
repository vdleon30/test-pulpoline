{
    "openapi": "3.0.0",
    "info": {
        "title": "Weather API Documentation",
        "description": "API for managing users and consulting weather data from WeatherAPI",
        "contact": {
            "email": "admin@example.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user and returns an API token.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|abcdef123456"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login an existing user",
                "description": "Logs in an existing user and returns an API token.",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged in successfully"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "2|abcdef123456"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid login details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid login details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the current user",
                "description": "Invalidates the current user's API token.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/favorites": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Get list of favorite cities for the authenticated user",
                "description": "Returns a paginated list of the user's favorite cities.",
                "operationId": "getFavoriteCities",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FavoriteCityResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Add a city to favorites",
                "description": "Adds a specified city to the authenticated user's list of favorites.",
                "operationId": "addFavoriteCity",
                "requestBody": {
                    "description": "City name to add to favorites",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "city_name"
                                ],
                                "properties": {
                                    "city_name": {
                                        "type": "string",
                                        "example": "London"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "City added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FavoriteCityResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "409": {
                        "description": "Conflict - City already in favorites"
                    },
                    "422": {
                        "description": "Validation error (e.g., city_name missing or invalid)"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/favorites/{city_name}": {
            "delete": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Remove a city from favorites",
                "description": "Removes a specified city from the authenticated user's list of favorites.",
                "operationId": "removeFavoriteCity",
                "parameters": [
                    {
                        "name": "city_name",
                        "in": "path",
                        "description": "Name of the city to remove",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "City removed from favorites."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "City not found in favorites"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/history": {
            "get": {
                "tags": [
                    "Search History"
                ],
                "summary": "Get search history for the authenticated user",
                "description": "Returns a paginated list of the user's past weather searches.",
                "operationId": "getSearchHistory",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SearchHistoryResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users (paginated). Requires 'manage users' permission.",
                "operationId": "getUsersList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for name or email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden (User does not have the right permissions.)"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create new user",
                "description": "Creates a new user. Requires 'manage users' permission.",
                "operationId": "storeUser",
                "requestBody": {
                    "description": "User object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/users/{user}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get user information",
                "description": "Returns user data. Admin can view any user, regular user can view their own.",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update existing user",
                "description": "Updates an existing user. Admin can update any user, regular user can update their own. Requires 'manage users' permission for admin updates.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User object that needs to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete existing user",
                "description": "Deletes an existing user. Requires 'manage users' permission.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden (e.g., admin trying to delete self, or no permission)"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/weather/{city}": {
            "get": {
                "tags": [
                    "Weather"
                ],
                "summary": "Get current weather for a city",
                "description": "Returns current weather data for the specified city. Also logs the search to user's history.",
                "operationId": "getCurrentWeatherForCity",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "description": "Name of the city",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WeatherResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "City not found or API error"
                    },
                    "422": {
                        "description": "Validation error (e.g., city name too long)"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/weather/search": {
            "get": {
                "tags": [
                    "Weather"
                ],
                "summary": "Search for weather locations",
                "description": "Returns a list of locations matching the search query.",
                "operationId": "searchWeatherLocations",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query (e.g., city name fragment)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LocationResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "No locations found or API error"
                    },
                    "422": {
                        "description": "Validation error (e.g., query too short)"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginUserRequest": {
                "title": "Login User Request",
                "description": "Request body for logging in an existing user",
                "required": [
                    "email",
                    "password"
                ],
                "type": "object"
            },
            "RegisterUserRequest": {
                "title": "Register User Request",
                "description": "Request body for registering a new user",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Store User Request",
                "description": "Request body for creating a new user",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "Update User Request",
                "description": "Request body for updating an existing user",
                "type": "object"
            },
            "FavoriteCityResource": {
                "title": "Favorite City Resource",
                "description": "Favorite city data",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "city_name": {
                        "type": "string",
                        "example": "Paris"
                    },
                    "added_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2023-01-01T12:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "SearchHistoryResource": {
                "title": "Search History Resource",
                "description": "User's search history item",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "query_term": {
                        "description": "The term the user originally searched for",
                        "type": "string",
                        "example": "London"
                    },
                    "location_name": {
                        "description": "The actual location name returned by the weather API",
                        "type": "string",
                        "example": "London, City of London, Greater London, United Kingdom"
                    },
                    "weather_data": {
                        "$ref": "#/components/schemas/WeatherResource"
                    },
                    "searched_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2023-01-01T12:05:00.000000Z"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2023-01-01T12:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2023-01-01T12:00:00.000000Z"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "user",
                            "admin"
                        ]
                    }
                },
                "type": "object"
            },
            "LocationResource": {
                "title": "Location Resource",
                "description": "Location data from weather API search",
                "properties": {
                    "id": {
                        "description": "Unique ID of the location from the weather API",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 2801268
                    },
                    "name": {
                        "description": "Full name of the location",
                        "type": "string",
                        "example": "London, City of London, Greater London, United Kingdom"
                    },
                    "region": {
                        "description": "Region of the location",
                        "type": "string",
                        "example": "City of London, Greater London"
                    },
                    "country": {
                        "description": "Country of the location",
                        "type": "string",
                        "example": "United Kingdom"
                    },
                    "latitude": {
                        "description": "Latitude of the location",
                        "type": "number",
                        "format": "float",
                        "example": 51.52
                    },
                    "longitude": {
                        "description": "Longitude of the location",
                        "type": "number",
                        "format": "float",
                        "example": -0.11
                    }
                },
                "type": "object"
            },
            "WeatherResource": {
                "title": "Weather Resource",
                "description": "Weather data for a specific city",
                "properties": {
                    "city": {
                        "type": "string",
                        "example": "London"
                    },
                    "temperature": {
                        "type": "string",
                        "example": "15.0 °C"
                    },
                    "condition": {
                        "type": "string",
                        "example": "Partly cloudy"
                    },
                    "wind": {
                        "type": "string",
                        "example": "10.0 kph"
                    },
                    "humidity": {
                        "type": "string",
                        "example": "70%"
                    },
                    "local_time": {
                        "type": "string",
                        "example": "2023-10-27 10:00"
                    },
                    "retrieved_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-27T10:05:00.000000Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Favorites",
            "description": "Favorites"
        },
        {
            "name": "Search History",
            "description": "Search History"
        },
        {
            "name": "User Management",
            "description": "User Management"
        },
        {
            "name": "Weather",
            "description": "Weather"
        }
    ]
}